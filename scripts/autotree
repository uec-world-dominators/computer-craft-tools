local turtle = turtle
local vector = vector
local shell = shell

shell.run("navigation.lua")
shell.run("util.lua")
shell.run("handlers.lua")
shell.run("blocks.lua")
shell.run("tracer.lua")


local CHEST_STATION = Navigation.new(vector.new(0, 0, 0), EAST)
local FUEL_STATION = Navigation.new(vector.new(0, 0, 0), SOUTH)
local TARGET_FUEL_LEVEL = 2000

local hooks = {
    dig = {Create_free_slots_handler(CHEST_STATION)},
    move = {Create_refuel_handler(FUEL_STATION, CHEST_STATION, TARGET_FUEL_LEVEL)},
}

local MINECRAFT_LOG_ID = "minecraft:log"
local MINECRAFT_SAPLING_ID = "minecraft:sapling"
local MINECRAFT_LEAVES_ID = "minecraft:leaves"

local function there_are_leaves(nav)
    for i = 1, 4 do
        nav:move(TURN_RIGHT)
        if turtle.detect() then
            return true
        end
    end
    return false
end

local function move_spiral(nav)
    local max_range = 2
    for k = 1, max_range do
        if not(turtle.detect()) then
            return
        end
        nav:move(FORWARD)
        nav:move(TURN_RIGHT)
        for i = 1, 4 do
            for j = 1, k do
                nav:move(FORWARD)
            end
            nav:move(TURN_RIGHT)
            for j = 1, k do
                nav:move(FORWARD)
            end
        end
        if k ~= max_range then
            nav:move(TURN_LEFT)
        end
    end
end

local function cut_leaf(nav)
    while nav.position.y > 0 do
        nav:with(function ()
            if there_are_leaves(nav) then
                move_spiral(nav)
            end
        end)
        nav:move(DOWN)
    end
end

-- 目の前の木を伐採する
local function cut_tree(nav)
    turtle.digDown()
    while true do
        local result, info = turtle.inspectUp()
        if result and (info.name == MINECRAFT_LOG_ID or info.name == MINECRAFT_LEAVES_ID) then
            -- 木
            nav:move(UP)
        else
            -- 制限ブロックに到達
            cut_leaf(nav)
            break
        end
    end
end

local function place_sapling()
    Select_first_slot_of(MINECRAFT_SAPLING_ID)
    if not(turtle.placeDown()) then
        print("cannot place sapling, skip")
        return false
    else
        return true
    end
end


local nav = Navigation.new()
nav.set_hooks(hooks)
nav:with(function ()
    local block_turn_right = BlockInfo.new("minecraft:cobblestone", 0)
    local block_turn_left = BlockInfo.new("minecraft:sand", 0)
    local block_stop = BlockInfo.new("minecraft:redstone_block", 0)

    while true do
        local result, info = turtle.inspect()
        if result and info.name == MINECRAFT_LOG_ID then
            nav:move(FORWARD)
            print("cut this tree")
            nav:with(function ()
                cut_tree(nav)
            end)
            place_sapling()
        else
            local result_down, info_down = turtle.inspectDown()
            local result_up, info_up = turtle.inspectUp()
            if (result_down and info_down.name == MINECRAFT_LOG_ID) or
            (result_up and info_up.name == MINECRAFT_LOG_ID) then
                print("cut this tree")
                nav:with(function ()
                    cut_tree(nav)
                end)
                place_sapling()
            end


            local result, info = turtle.inspectDown()
            if result and block_turn_right:equal(info) then
                nav:move(TURN_RIGHT)
                nav:move(FORWARD)
            elseif result and block_turn_left:equal(info) then
                nav:move(TURN_LEFT)
                nav:move(FORWARD)
            elseif result and block_stop:equal(info) then
                break
            else
                nav:move(FORWARD)
            end
        end
    end
end)
